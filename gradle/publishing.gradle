import io.codearte.gradle.nexus.BaseStagingTask
import io.codearte.gradle.nexus.NexusStagingPlugin

buildscript {
    repositories {
        gradlePluginPortal()
    }
    dependencies {
        classpath 'io.codearte.gradle.nexus:gradle-nexus-staging-plugin:0.11.0'
    }
}

def releaseVersion = !version.toString().endsWith('-SNAPSHOT')

ext {
    it.'signing.secretKeyRingFile' = project.findProperty('javacord.signing.secretKeyRingFile') ?:
            project.findProperty('signing.secretKeyRingFile')
    it.'signing.password' = project.findProperty('javacord.signing.password') ?:
            project.findProperty('signing.password')
    it.'signing.keyId' = project.findProperty('javacord.signing.keyId') ?:
            project.findProperty('signing.keyId')
    sonatypeUsername = project.findProperty('javacord.sonatype.username') ?:
            project.findProperty('sonatype.username')
    sonatypePassword = project.findProperty('javacord.sonatype.password') ?:
            project.findProperty('sonatype.password')
    sonatypeStagingProfileId = project.findProperty('javacord.sonatype.stagingProfileId') ?:
            project.findProperty('sonatype.stagingProfileId')
}

allprojects {
    apply plugin: 'signing'
    apply plugin: 'maven-publish'

    // The whole signing stuff in combination with maven-publish should work more automagical after
    // https://github.com/gradle/gradle/issues/4943 was done in Gradle 4.8
    signing {
        // signing is required if this is a release version and the artifacts are to be published
        required {
            releaseVersion && allprojects.tasks*.withType(PublishToMavenRepository).flatten().find {
                gradle.taskGraph.hasTask it
            }
        }
        // sign the JARs
        sign configurations.archives
    }

    // add the signature files as task outputs, this is a work-around for
    // https://github.com/gradle/gradle/issues/4980 which is fixed in Gradle 4.8
    signArchives.signatureFiles.each { signArchives.outputs.file it }

    publishing {
        repositories {
            maven {
                name 'sonatype'
                if (releaseVersion) {
                    url 'https://oss.sonatype.org/service/local/staging/deploy/maven2/'
                } else {
                    url 'https://oss.sonatype.org/content/repositories/snapshots/'
                }
                credentials {
                    username sonatypeUsername
                    password sonatypePassword
                }
            }
        }

        publications {
            javacord(MavenPublication) { publication ->
                if (releaseVersion) {
                    // add the JAR signatures to the publication
                    signArchives.signatures.each { signature ->
                        artifact(signature) {
                            extension signature.type
                        }
                    }
                    // add the POM signature to the publication
                    artifact(file("$buildDir/publications/$publication.name/pom-default.xml.asc")) {
                        extension 'pom.asc'
                        builtBy signArchives
                    }
                }
            }
        }
    }

    // sign the generated POM
    tasks.withType(GenerateMavenPom) {
        signArchives.dependsOn it
        signArchives.sign it.outputs.files.singleFile
        // add the signature files as task outputs, this is a work-around for
        // https://github.com/gradle/gradle/issues/4980 which is fixed in Gradle 4.8
        signArchives.signatureFiles.each { signArchives.outputs.file it }
    }
}

subprojects {
    publishing {
        publications {
            javacord {
                from components.java
                artifact javadocJar
                artifact sourcesJar
                pom {
                    packaging 'jar'
                }
            }
        }
    }
}

publishing {
    publications {
        javacord {
            // add the dependencies to the POM
            from components.java
            // but do not try to publish the JAR
            artifacts.removeAll { !it.classifier && (it.extension == 'jar') }
            artifact shadowJar

            pom {
                // this is a work-around for https://github.com/gradle/gradle/issues/4985 that is hopefully
                // not necessary anymore after https://github.com/gradle/gradle/issues/4943 is done
                // with that, either the explicit packaging declaration can be removed or at least switched back to pom
                packaging 'pom.asc'
            }
        }
    }
}

apply plugin: NexusStagingPlugin
// remove superfluous tasks from NexusStagingPlugin
tasks.removeAll([promoteRepository, closeAndPromoteRepository, getStagingProfile])

nexusStaging {
    stagingProfileId sonatypeStagingProfileId
    username sonatypeUsername
    password sonatypePassword
}

// make sure the staging tasks are run after any publishing tasks if both are to be run
tasks.withType(BaseStagingTask) {
    it.mustRunAfter allprojects.tasks*.withType(PublishToMavenRepository)
}
